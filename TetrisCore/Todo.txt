- Use shared_lock for threads that don't modify the game state (Controller::refresh for example)
- Fix stack overflow when deleting a node that goes very deep.
- Consider introducing a memory limit instead of a depth limit.
- Player class: specifying a time limit should be non-intrusive. Use a Concept (or Decorator).
- Improve speed of search depth 4
- SpinButton -> implement a refresh when keeping the mouse button down
- SpinButton -> implement range (block mover speed!)
- Resizing the window during gameplay causes it to grow super-large in size horizontally.
- Use Tetris icon on the exe file.
- False positives of: "Failed to move the blocks in time"
v Fix deadlock issue in BlockMover:
v Implement level increment (doesn't work currently)
v Add AI movement speed parameter.
v Use up/down control for modifying AI parameters.
v Implement various selectable "Strategies" for AI
v Add the tetris icon to the credits section (about dialog)
v Strategy selector: implement a DECENT event handler for the menu handler AND the menupopup
v Hyperlink in about dialog
v About dialog
v Window icon
v Show menu with "New game", "About", etc..
v Use Tetris/Game.h include structure.
v Replace Protected<Game> with Protected<Game>.
v Stop cheating
v Logger scroll to bottom
v Fix Game Over crash
v Use official Tetris colors
v AI thinks while block mover is doing his thing
v Delete JobRunner.h and .cpp
v Non-blocking visual Player
